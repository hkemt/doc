1.EMT.dmp sql내용


--------------------------------------------------------------------

/* 회원정보 */
CREATE TABLE USERS (
	USER_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	USER_PW VARCHAR2(20), /* 비밀번호 */
	EMAIL VARCHAR2(50) /* 이메일 */
);

COMMENT ON TABLE USERS IS '회원정보';

COMMENT ON COLUMN USERS.USER_ID IS '아이디';

COMMENT ON COLUMN USERS.USER_PW IS '비밀번호';

COMMENT ON COLUMN USERS.EMAIL IS '이메일';

CREATE UNIQUE INDEX PK_USERS
	ON USERS (
		USER_ID ASC
	);

ALTER TABLE USERS
	ADD
		CONSTRAINT PK_USERS
		PRIMARY KEY (
			USER_ID
		);
------------------------------------------------------------------------
/* 댓글 */
CREATE TABLE REPLY (
	REPLY_NO NUMBER NOT NULL, /* 댓글번호 */
	USER_ID VARCHAR2(20), /* 아이디 */
	REPLY_CONTENT VARCHAR2(4000), /* 내용 */
	BOARD_NO NUMBER, /* 게시판번호 */
	REPLY_DATE DATE /* 날짜 */
);

COMMENT ON TABLE REPLY IS '댓글';

COMMENT ON COLUMN REPLY.REPLY_NO IS '댓글번호';

COMMENT ON COLUMN REPLY.USER_ID IS '아이디';

COMMENT ON COLUMN REPLY.REPLY_CONTENT IS '내용';

COMMENT ON COLUMN REPLY.BOARD_NO IS '게시판번호';

COMMENT ON COLUMN REPLY.REPLY_DATE IS '날짜';

CREATE UNIQUE INDEX PK_REPLY
	ON REPLY (
		REPLY_NO ASC
	);

ALTER TABLE REPLY
	ADD
		CONSTRAINT PK_REPLY
		PRIMARY KEY (
			REPLY_NO
		);
------------------------------------------------------------------------
/* 문제 */
CREATE TABLE QUESITION (
	TEST_NO NUMBER NOT NULL, /* 문제번호 */
	TEST_CONTENT VARCHAR2(400), /* 문제내용 */
	TEST_TYPE NUMBER, /* 유형번호 */
	TEST_MP3 VARCHAR2(100), /* 음원경로 */
	TEST_IMG VARCHAR2(100) /* 사진경로 */
);

COMMENT ON TABLE QUESITION IS '문제';

COMMENT ON COLUMN QUESITION.TEST_NO IS '문제번호';

COMMENT ON COLUMN QUESITION.TEST_CONTENT IS '문제내용';

COMMENT ON COLUMN QUESITION.TEST_TYPE IS '유형번호';

COMMENT ON COLUMN QUESITION.TEST_MP3 IS '음원경로';

COMMENT ON COLUMN QUESITION.TEST_IMG IS '사진경로';

CREATE UNIQUE INDEX PK_QUESITION
	ON QUESITION (
		TEST_NO ASC
	);

ALTER TABLE QUESITION
	ADD
		CONSTRAINT PK_QUESITION
		PRIMARY KEY (
			TEST_NO
		);
------------------------------------------------------------------------
/* 내가 푼 문제 */
CREATE TABLE WRONG (
	MY_NO NUMBER NOT NULL, /* 나의번호 */
	MY_CODE NUMBER, /* 문제번호 */
	USER_ID VARCHAR2(20) /* 아이디 */
);

COMMENT ON TABLE WRONG IS '내가 푼 문제';

COMMENT ON COLUMN WRONG.MY_NO IS '나의번호';

COMMENT ON COLUMN WRONG.MY_CODE IS '문제번호';

COMMENT ON COLUMN WRONG.USER_ID IS '아이디';

CREATE UNIQUE INDEX PK_WRONG
	ON WRONG (
		MY_NO ASC
	);

ALTER TABLE WRONG
	ADD
		CONSTRAINT PK_WRONG
		PRIMARY KEY (
			MY_NO
		);
------------------------------------------------------------------------
/* 게시판 */
CREATE TABLE BOARD (
	BOARD_NO NUMBER NOT NULL, /* 게시판번호 */
	BOARD_TITLE VARCHAR2(100), /* 제목 */
	BOARD_CONTENT VARCHAR2(4000), /* 내용 */
	BOARD_DATE DATE, /* 날짜 */
	BOARD_NOTICE NUMBER, /* 공지여부 */
	BOARD_COUNT NUMBER, /* 조회수 */
	USER_ID VARCHAR2(20) /* 아이디 */
);

COMMENT ON TABLE BOARD IS '게시판';

COMMENT ON COLUMN BOARD.BOARD_NO IS '게시판번호';

COMMENT ON COLUMN BOARD.BOARD_TITLE IS '제목';

COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '내용';

COMMENT ON COLUMN BOARD.BOARD_DATE IS '날짜';

COMMENT ON COLUMN BOARD.BOARD_NOTICE IS '공지여부';

COMMENT ON COLUMN BOARD.BOARD_COUNT IS '조회수';

COMMENT ON COLUMN BOARD.USER_ID IS '아이디';

CREATE UNIQUE INDEX PK_BOARD
	ON BOARD (
		BOARD_NO ASC
	);


------------------------------------------------------------------------
ALTER TABLE BOARD
	ADD
		CONSTRAINT PK_BOARD
		PRIMARY KEY (
			BOARD_NO
		);

ALTER TABLE REPLY
	ADD
		CONSTRAINT FK_USERS_TO_REPLY
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES USERS (
			USER_ID
		);

ALTER TABLE REPLY
	ADD
		CONSTRAINT FK_BOARD_TO_REPLY
		FOREIGN KEY (
			BOARD_NO
		)
		REFERENCES BOARD (
			BOARD_NO
		);

ALTER TABLE WRONG
	ADD
		CONSTRAINT FK_USERS_TO_WRONG
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES USERS (
			USER_ID
		);

ALTER TABLE WRONG
	ADD
		CONSTRAINT FK_QUESITION_TO_WRONG
		FOREIGN KEY (
			MY_CODE
		)
		REFERENCES QUESITION (
			TEST_NO
		);

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_USERS_TO_BOARD
		FOREIGN KEY (
			USER_ID
		)
		REFERENCES USERS (
			USER_ID
		);












2.emt.dmp익스포트방법

exp userid=emt/emt file='C:\dev\EMT.DMP'
